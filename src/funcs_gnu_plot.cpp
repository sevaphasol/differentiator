#include "operations.h"
#include "dsl.h"
#include "custom_assert.h"
#include "math.h"

//———————————————————————————————————————————————————————————————————//

//////////////////////////////////////////////////
////////////////ADDITIONAL MACROS/////////////////
///////////////FOR DEFINING FUNCS/////////////////
////////////////WRITING GNU PLOT//////////////////
///////////////FORMAT EXPRESSION//////////////////
//////////////////////////////////////////////////

//———————————————————————————————————————————————————————————————————//

#define _PLOT_FUNC_INTRO                                              \
                                                                      \
    ASSERT(ctx);                                                      \
    ASSERT(node);                                                     \
                                                                      \
    node_t* l = node->left;                                           \
    node_t* r = node->right;                                          \
                                                                      \

//===================================================================//

#define _PLOT_FUNC(func_name, executing_code)                         \
                                                                      \
void plot_##func_name(diff_context_t* ctx, node_t* node)              \
{                                                                     \
    _PLOT_FUNC_INTRO;                                                 \
    executing_code;                                                   \
}                                                                     \

//===================================================================//

#define _IN_BRACES(code)                                              \
    _PUTC('{');                                                       \
    code;                                                             \
    _PUTC('}');                                                       \

//-------------------------------------------------------------------//

#define _IN_PARENT(code)                                              \
    _PUTC('(');                                                       \
    code;                                                             \
    _PUTC(')');                                                       \

//===================================================================//

#define _PRINT(...) fprintf(ctx->dump_info.plots_file, ##__VA_ARGS__)

//-------------------------------------------------------------------//

#define _PUTC(symb) fputc(symb, ctx->dump_info.plots_file)

//———————————————————————————————————————————————————————————————————//

//////////////////////////////////////////////////
//////////////////////////////////////////////////
//////////////////////////////////////////////////
///////////////DEFINITION OF FUNCS////////////////
//////////////////////////////////////////////////
//////////////////////////////////////////////////
//////////////////////////////////////////////////

//———————————————————————————————————————————————————————————————————//

_PLOT_FUNC(num,
    _PRINT("%lg", node->val.num);
)

//===================================================================//

_PLOT_FUNC(var,
    _PUTC(VarsTable[node->val.var].name);
)

//===================================================================//

_PLOT_FUNC(add,
    _PLOT(l);
    _PUTC('+');
    _PLOT(r);
)

//===================================================================//

_PLOT_FUNC(sub,
    _PLOT(l);
    _PUTC('-');
    _PLOT(r);
)

//===================================================================//

_PLOT_FUNC(mul,
    _IN_PARENT(_PLOT(l));
    _PRINT("*");
    _IN_PARENT(_PLOT(r));
)

//===================================================================//

_PLOT_FUNC(div,
    _IN_PARENT(_PLOT(l));
    _PRINT("/");
    _IN_PARENT(_PLOT(r));
)

//===================================================================//

_PLOT_FUNC(sqrt,
    _PRINT("sqrt");
    _IN_PARENT(_PLOT(l));
)

//===================================================================//

_PLOT_FUNC(pow,
    _IN_PARENT(_PLOT(l));
    _PRINT("**");
    _IN_PARENT(_PLOT(r));
)

//===================================================================//

_PLOT_FUNC(log,
    _PRINT("log_");
    _PLOT(l);
    _IN_PARENT(_PLOT(r));
)

//===================================================================//

_PLOT_FUNC(ln,
    _PRINT("log");
    _IN_PARENT(_PLOT(l));
)

//===================================================================//

_PLOT_FUNC(sin,
    _PRINT("sin");
    _IN_PARENT(_PLOT(l));
)

//===================================================================//

_PLOT_FUNC(cos,
    _PRINT("cos");
    _IN_PARENT(_PLOT(l));
)

//===================================================================//

_PLOT_FUNC(tan,
    _PRINT("tan");
    _IN_PARENT(_PLOT(l));
)

//===================================================================//

_PLOT_FUNC(cot,
    _IN_PARENT(
        _PRINT("1/tan");
        _IN_PARENT(_PLOT(l));
              );
)

//===================================================================//

_PLOT_FUNC(arcsin,
    _PRINT("asin");
    _IN_PARENT(_PLOT(l));
)

//===================================================================//

_PLOT_FUNC(arccos,
    _PRINT("acos");
    _IN_PARENT(_PLOT(l));
)

//===================================================================//

_PLOT_FUNC(arctan,
    _PRINT("atan");
    _IN_PARENT(_PLOT(l));
)

//===================================================================//

_PLOT_FUNC(arccot,
    _IN_PARENT(
        _PRINT("%lf - atan", M_PI_2);
        _IN_PARENT(_PLOT(l));
              );
)

//===================================================================//

_PLOT_FUNC(sinh,
    _PRINT("sinh");
    _IN_PARENT(_PLOT(l));
)

//===================================================================//

_PLOT_FUNC(cosh,
    _PRINT("cosh");
    _IN_PARENT(_PLOT(l));
)

//===================================================================//

_PLOT_FUNC(tanh,
    _PRINT("tanh");
    _IN_PARENT(_PLOT(l));
)

//===================================================================//

_PLOT_FUNC(coth,
    _IN_PARENT(
        _PRINT("1/tanh");
        _IN_PARENT(_PLOT(l));
              );
)

//===================================================================//

_PLOT_FUNC(arcsinh,
    _PRINT("asinh");
    _IN_PARENT(_PLOT(l));
)

//===================================================================//

_PLOT_FUNC(arccosh,
    _PRINT("acosh");
    _IN_PARENT(_PLOT(l));
)

//===================================================================//

_PLOT_FUNC(arctanh,
    _PRINT("atanh");
    _IN_PARENT(_PLOT(l));
)

//===================================================================//

_PLOT_FUNC(arccoth,
    _IN_PARENT(
        _PRINT("0.5 * (log(1 + 1 / (");
        _IN_PARENT(_PLOT(l));
        _PRINT(") - log(1 - 1 / (");
        _IN_PARENT(_PLOT(l));
        _PRINT("))))");
              );
)

//———————————————————————————————————————————————————————————————————//

#undef _PLOT_FUNC_INTRO
#undef _PLOT_FUNC
#undef _PRINT
#undef _PUTC
#undef _IN_BRACES
#undef _IN_PARENT

//———————————————————————————————————————————————————————————————————//
